/* Generated By:JavaCC: Do not edit this line. LPLParserConstants.java */
package lpl.parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface LPLParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int LBR = 8;
  /** RegularExpression Id. */
  int RBR = 9;
  /** RegularExpression Id. */
  int LCBR = 10;
  /** RegularExpression Id. */
  int RCBR = 11;
  /** RegularExpression Id. */
  int LSBR = 12;
  /** RegularExpression Id. */
  int RSBR = 13;
  /** RegularExpression Id. */
  int DEF = 14;
  /** RegularExpression Id. */
  int ISNULL = 15;
  /** RegularExpression Id. */
  int LENGTH = 16;
  /** RegularExpression Id. */
  int INT = 17;
  /** RegularExpression Id. */
  int OUTPUT = 18;
  /** RegularExpression Id. */
  int BOOL = 19;
  /** RegularExpression Id. */
  int UNIT = 20;
  /** RegularExpression Id. */
  int OUTCHAR = 21;
  /** RegularExpression Id. */
  int RETURN = 22;
  /** RegularExpression Id. */
  int NEW = 23;
  /** RegularExpression Id. */
  int IF = 24;
  /** RegularExpression Id. */
  int WHILE = 25;
  /** RegularExpression Id. */
  int ELSE = 26;
  /** RegularExpression Id. */
  int NOT = 27;
  /** RegularExpression Id. */
  int TRUE = 28;
  /** RegularExpression Id. */
  int FALSE = 29;
  /** RegularExpression Id. */
  int SEMICOLON = 30;
  /** RegularExpression Id. */
  int AND = 31;
  /** RegularExpression Id. */
  int OR = 32;
  /** RegularExpression Id. */
  int LESSTHAN = 33;
  /** RegularExpression Id. */
  int EQUALTO = 34;
  /** RegularExpression Id. */
  int EQUALS = 35;
  /** RegularExpression Id. */
  int DIVIDE = 36;
  /** RegularExpression Id. */
  int PLUS = 37;
  /** RegularExpression Id. */
  int MINUS = 38;
  /** RegularExpression Id. */
  int MULTIPLY = 39;
  /** RegularExpression Id. */
  int COMMA = 40;
  /** RegularExpression Id. */
  int INTEGER_LITERAL = 41;
  /** RegularExpression Id. */
  int ID = 42;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\f\"",
    "<token of kind 6>",
    "<token of kind 7>",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\"[\"",
    "\"]\"",
    "\"def\"",
    "\"isnull\"",
    "\".length\"",
    "\"int\"",
    "\"output\"",
    "\"bool\"",
    "\"unit\"",
    "\"outchar\"",
    "\"return\"",
    "\"new\"",
    "\"if\"",
    "\"while\"",
    "\"else\"",
    "\"!\"",
    "\"true\"",
    "\"false\"",
    "\";\"",
    "\"&&\"",
    "\"||\"",
    "\"<\"",
    "\"==\"",
    "\"=\"",
    "\"/\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\",\"",
    "<INTEGER_LITERAL>",
    "<ID>",
  };

}
